#include <stdio.h>
#include <malloc.h>

long long int merge(int* arr, int l, int r) {
    int m = (l + r) / 2;
    int i = l;
    int j = m + 1;
    int C[r - l + 1], k = 0;
    long long int count = 0;

    while ((i <= m) && (j <= r)) {
        if (arr[i] <= arr[j]) {
            C[k++] = arr[i++];
        }
        else {
            C[k++] = arr[j++];
            count += m - i + 1;
        }
    }

    while (i <= m)
        C[k++] = arr[i++];

    while (j <= r)
        C[k++] = arr[j++];

    for (int d = 0; d < r - l + 1; d++)
        arr[d + l] = C[d];

    return count;
}

long long int msort(int* arr, int l, int r) {
    if (l >= r) return 0;

    int m = (l + r) / 2;

    long long int count = msort(arr, l, m);
    count += msort(arr, m + 1, r);
    count += merge(arr, l, r);

    return count;
}

int main() {
    FILE *fi;
    fi = fopen("input.txt", "r");
    int n;
    fscanf(fi, "%d\n", &n);
    int *a;
    a = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; ++i){
        fscanf(fi, "%d", &a[i]);
    }
    fclose(fi);

    long long int count = msort(a, 0, n-1);
    //long long int count = 4999950000;
    FILE *fo;
    fo = fopen("output.txt", "w");
    fprintf(fo, "%llu", count);
    fclose(fo);
    return 0;
}